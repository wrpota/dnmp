version: '3'

services:
### WORKSPACE ############################################
  workspace:
    container_name: workspace
    build: 
      context: ./workspace
      args:
        - PUID=${PUID}
        - PGID=${PGID}
        - PHP_VERSION=${PHP_VERSION}
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - INSTALL_SSH2=${WORKSPACE_INSTALL_SSH2}
        - INSTALL_FAKETIME=${WORKSPACE_INSTALL_FAKETIME}
        - INSTALL_PGSQL=${WORKSPACE_INSTALL_PGSQL}
        - INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}
        - INSTALL_POSTGIS=${WORKSPACE_INSTALL_POSTGIS}
        - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
        - INSTALL_BLACKFIRE=${WORKSPACE_INSTALL_BLACKFIRE}
        - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
        - INSTALL_SWOOLE=${WORKSPACE_INSTALL_SWOOLE}
        - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
        - INSTALL_MEMCACHED=${WORKSPACE_INSTALL_MEMCACHED}
        - INSTALL_EXIF=${WORKSPACE_INSTALL_EXIF}
        - INSTALL_OPCACHE=${WORKSPACE_INSTALL_OPCACHE}
        - INSTALL_MYSQLI=${WORKSPACE_INSTALL_MYSQLI}
        - INSTALL_INTL=${WORKSPACE_INSTALL_INTL}
        - INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}
        - INSTALL_SMB=${WORKSPACE_INSTALL_SMB}
        - INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}
        - INSTALL_CALENDAR=${WORKSPACE_INSTALL_CALENDAR}
        - INSTALL_APCU=${WORKSPACE_INSTALL_APCU}
        - INSTALL_YAML=${WORKSPACE_INSTALL_YAML}
        - INSTALL_RDKAFKA=${WORKSPACE_INSTALL_RDKAFKA}
        - INSTALL_GETTEXT=${WORKSPACE_INSTALL_GETTEXT}
        - INSTALL_MYSQL_CLIENT=${WORKSPACE_INSTALL_MYSQL_CLIENT}
        - INSTALL_PING=${WORKSPACE_INSTALL_PING}
        - INSTALL_SSHPASS=${WORKSPACE_INSTALL_SSHPASS}
        - INSTALL_FFMPEG=${WORKSPACE_INSTALL_FFMPEG}
        - INSTALL_MAILPARSE=${WORKSPACE_INSTALL_MAILPARSE}
        - INSTALL_XMLRPC=${WORKSPACE_INSTALL_XMLRPC}
        - DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL=${WORKSPACE_DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL}
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ./workspace/supervisord.d:/etc/supervisord.d
    restart: always
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend

### PHP FPM ############################################
  php-fpm:
    container_name: php-fpm
    build: 
      context: ./php-fpm
      args:
        - PUID=${PUID}
        - PGID=${PGID}
        - PHP_VERSION=${PHP_VERSION}
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}
        - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
        - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
        - INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_BLACKFIRE=${PHP_FPM_INSTALL_BLACKFIRE}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
        - INSTALL_SMB=${PHP_FPM_INSTALL_SMB}
        - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
        - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
        - INSTALL_APCU=${PHP_FPM_INSTALL_APCU}
        - INSTALL_YAML=${PHP_FPM_INSTALL_YAML}
        - INSTALL_RDKAFKA=${PHP_FPM_INSTALL_RDKAFKA}
        - INSTALL_GETTEXT=${PHP_FPM_INSTALL_GETTEXT}
        - INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}
        - INSTALL_PING=${PHP_FPM_INSTALL_PING}
        - INSTALL_SSHPASS=${PHP_FPM_INSTALL_SSHPASS}
        - INSTALL_FFMPEG=${PHP_FPM_INSTALL_FFMPEG}
        - INSTALL_MAILPARSE=${PHP_FPM_INSTALL_MAILPARSE}
        - INSTALL_XMLRPC=${PHP_FPM_INSTALL_XMLRPC}
        - DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL=${PHP_FPM_DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL}
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    restart: always
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend

### MySQL ################################################
  mysql:
    container_name: mysql
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    restart: always
    volumes:
      - ${MYSQL_CONF}:/etc/mysql/conf.d/my.cnf
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
    ports:
      - "${DATABASE_PORT}:3306"
    networks:
      - backend

### Redis ################################################
  redis:
    container_name: redis
    build: ./redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend
      
### NGINX Server #########################################
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    restart: always
    privileged: true
    tty: true
    networks:
      - backend

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}

networks:
  backend:
    driver: ${NETWORKS_DRIVER}